# Import necessary libraries
import numpy as np
import joblib
from sklearn.preprocessing import StandardScaler

# Load the trained model and scaler
model_path = "/content/cancer_model.pkl"  # Ensure you upload this file
scaler_path = "/content/scaler.pkl"       # Ensure you upload this file

try:
    model = joblib.load(model_path)
    scaler = joblib.load(scaler_path)
except FileNotFoundError:
    print("‚ùå Error: Model or Scaler file not found. Please upload the correct files.")

# Function to take user input in a single row
def predict_cancer():
    print("\nEnter patient data as **comma-separated numeric values**:")

    while True:
        try:
            # Take input as a single comma-separated string
            input_string = input("Enter 30 feature values: ")

            # Convert input string to a list of floats
            input_data = list(map(float, input_string.split(",")))

            # Validate that exactly 30 values are provided
            if len(input_data) != 30:
                print("‚ùå Error: Please enter exactly 30 numeric values.")
                continue  # Retry input

            break  # Exit loop if input is valid
        except ValueError:
            print("‚ùå Invalid input! Please enter numeric values separated by commas.")

    # Convert to NumPy array and reshape for prediction
    input_array = np.array(input_data).reshape(1, -1)

    # Standardize input using the trained scaler
    input_array_scaled = scaler.transform(input_array)

    # Make prediction
    prediction = model.predict(input_array_scaled)[0]

    # Display result
    if prediction == 1:
        print("\nüî¥ The model predicts: The person **HAS CANCER (Malignant)**")
    else:
        print("\nüü¢ The model predicts: The person **DOES NOT HAVE CANCER (Benign)**")

# Run prediction function
predict_cancer()
